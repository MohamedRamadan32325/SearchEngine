// <auto-generated />
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using WebPage.Data;

#nullable disable

namespace WebPage.Migrations
{
    [DbContext(typeof(AppDbContext))]
    partial class AppDbContextModelSnapshot : ModelSnapshot
    {
        protected override void BuildModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "9.0.4")
                .HasAnnotation("Relational:MaxIdentifierLength", 128);

            SqlServerModelBuilderExtensions.UseIdentityColumns(modelBuilder);

            modelBuilder.Entity("WebPage.Models.Urlswithranks", b =>
                {
                    b.Property<string>("FileName")
                        .HasColumnType("nvarchar(450)");

                    b.Property<double>("PageRank")
                        .HasColumnType("float");

                    b.Property<string>("URL")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("FileName");

                    b.ToTable("PageInfos", (string)null);
                });

            modelBuilder.Entity("WebPage.Models.inverted_index_sorted", b =>
                {
                    b.Property<string>("word")
                        .HasColumnType("nvarchar(450)");

                    b.Property<string>("FileName")
                        .HasColumnType("nvarchar(450)");

                    b.Property<int>("Count")
                        .HasColumnType("int");

                    b.HasKey("word", "FileName");

                    b.HasIndex("FileName");

                    b.ToTable("Word", (string)null);
                });

            modelBuilder.Entity("WebPage.Models.inverted_index_sorted", b =>
                {
                    b.HasOne("WebPage.Models.Urlswithranks", "PageInfo")
                        .WithMany("WordIndices")
                        .HasForeignKey("FileName")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("PageInfo");
                });

            modelBuilder.Entity("WebPage.Models.Urlswithranks", b =>
                {
                    b.Navigation("WordIndices");
                });
#pragma warning restore 612, 618
        }
    }
}
